version: 2.1
workflows:
  build-deploy:
    jobs:
      - test-orb-locally
      - publish:
#           requires:
#             - test-orb-locally
          filters:
            branches:
              only: master
            tags:
              only: /.*(\d+\.\d+\.\d+).*/

commands:
  get-version-number:
    steps:
    - run: |
        circleci orb info lbh-test/test-mvp@volatile | grep -oP "(\d+\.)+\d+\b"
jobs:
  test-orb-locally:
    docker:
      - image: circleci/circleci-cli
    steps:
      - checkout
      - run:
          name: Pack and Validate
          command: |
            circleci config pack src/ > packed.yml
            circleci orb validate packed.yml --token ${CIRCLE_API_KEY}
            if circleci orb publish packed.yml lbh-test/test-mvp@dev:${CIRCLE_BRANCH} --token ${CIRCLE_API_KEY}; then
              echo Existing Orb updated
            else
              circleci orb create lbh-test/${ORB_NAME} --no-prompt --token ${CIRCLE_API_KEY}
              circleci orb publish packed.yml lbh-test/test-mvp@dev:${CIRCLE_BRANCH} --token ${CIRCLE_API_KEY}
              echo New Orb published
            fi
  publish:
    docker:
      - image: circleci/circleci-cli
    steps:
      - checkout
      - run:
          name: Configure Environment
          command: |
            echo "export CURRENT_VERSION=$(circleci orb info lbh-test/test-mvp@volatile | grep -oP '(\d+\.)+\d+\b')" >> $BASH_ENV
            echo "export NEXT_VERSION=$(echo $CIRCLE_TAG | grep -oP '(\d+\.)+\d+')" >> $BASH_ENV
            env
      - get-version-number
      - run:
          name: Promote to prod
          command: |
            SEMANTIC_VERSION_REGEX="^(0|[1-9][0-9]*)\.(0|[1-9][0-9]*)\.(0|[1-9][0-9]*)(?:-((?:0|[1-9][0-9]*|[0-9]*[a-zA-Z-][0-9a-zA-Z-]*)(?:\.(?:0|[1-9][0-9]*|[0-9]*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\+([0-9a-zA-Z-]+(?:\.[0-9a-zA-Z-]+)*))?$"
            echo $CURRENT_VERSION
            echo $CIRCLE_TAG
            echo $NEXT_VERSION
            
            IFS='.' read -r -a CURRENT_VERSION_ARRAY <<< "$CURRENT_VERSION"
            
            for index in "${!CURRENT_VERSION_ARRAY[@]}"
            do
                echo "$index ${CURRENT_VERSION_ARRAY[index]}"
            done
           
            


            
            
